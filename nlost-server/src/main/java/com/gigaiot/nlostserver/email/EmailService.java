package com.gigaiot.nlostserver.email;import lombok.extern.slf4j.Slf4j;import org.springframework.beans.factory.annotation.Value;import org.springframework.stereotype.Component;import javax.mail.Message;import javax.mail.Session;import javax.mail.Transport;import javax.mail.internet.InternetAddress;import javax.mail.internet.MimeMessage;import java.util.Properties;/** * Created by cxm on 2018/1/5. */@Slf4j@Componentpublic class EmailService {    @Value("${email.host}")    private String host;    @Value("${email.port}")    private int port;    @Value("${email.smtp_username}")    private String smtpUsername;    @Value("${email.smtp_password}")    private String smtpPasssword;    @Value("${email.from}")    private String from;    @Value("${email.fromName}")    private String fromName;    public boolean sendMail(String title, String content, String receiver) throws Exception{        // Create a Properties object to contain connection configuration        // information.        Properties props = System.getProperties();        props.put("mail.transport.protocol", "smtp");        props.put("mail.smtp.port", port);        props.put("mail.smtp.starttls.enable", "true");        props.put("mail.smtp.auth", "true");        // Create a Session object to represent a mail session with the        // specified properties.        Session session = Session.getDefaultInstance(props);        // Create a message with the specified information.        MimeMessage msg = new MimeMessage(session);        msg.setFrom(new InternetAddress(from, fromName));        msg.setRecipient(Message.RecipientType.TO, new InternetAddress(receiver));        msg.setSubject(title);        msg.setContent(content, "text/html");        // Create a transport.        Transport transport = session.getTransport();        // Send the message.        try {            log.info("Sending email...");            // Connect to Amazon SES using the SMTP username and password you            // specified above.            transport.connect(host, smtpUsername, smtpPasssword);            // Send the email.            transport.sendMessage(msg, msg.getAllRecipients());            log.info("Email sent!");        } catch (Exception ex) {            log.error("The email was not sent, Error:" + ex.getMessage(), ex);            return false;        } finally {            // Close and terminate the connection.            transport.close();        }        return true;    }}